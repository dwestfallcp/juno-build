#!/bin/bash -e
#
# S2I assemble script for the 'golang-builder' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#
HOME=/opt/juno
GIT_SSH="ssh -p 20202"
set -o errexit

# If the 'golang-builder' assemble script is executed with the '-h' flag, print the usage.
if [[ "$1" == "-h" ]]; then
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

if ! whoami &> /dev/null; then
  if [ -w /etc/passwd ]; then
    echo "${USER_NAME:-default}:x:$(id -u):0:${USER_NAME:-default} user:${HOME}:/sbin/nologin" >> /etc/passwd
  fi
fi


echo "---> Installing application source..."
cp -Rf /tmp/src/. ./
JOB_NAME="Juno"
BUILD_NUMBER="`date +\%s`"
CATALINA_HOME=/usr/share/tomcat
CATALINA_BASE=/usr/share/tomcat
export JOB_NAME BUILD_NUMBER CATALINA_HOME CATALINA_BASE
rm -rf target
mvn process-resources -Dmaven.test.skip=true verify $1

